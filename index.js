import {GoogleSpreadsheet} from 'google-spreadsheet';
import {config} from 'dotenv';
import {I18n} from "i18n-js/dist/require/index.js";

config();

const store = {
    auth: {},
    doc: null,
    lang: 'es'
};

let translator;

async function auth(email, secret) {
    store.auth = {email, secret};
    // Initialize Auth - see https://theoephraim.github.io/node-google-spreadsheet/#/getting-started/authentication
    await store.doc.useServiceAccountAuth({
        // env var values are copied from service account credentials generated by google
        // see "Authentication" section in docs for more info
        client_email: email,
        private_key: secret,
    });
}

async function init(docId, key, secret) {
    if (!docId) throw new Error('Please provide a docId');
    if (!key) throw new Error('Please provide a google auth key');
    if (!secret) throw new Error('Please provide a google auth secret');

    store.doc = new GoogleSpreadsheet(docId);
    await auth(key, secret);
    await store.doc.loadInfo(); // loads document properties and worksheets
    await sync();
    return store.doc;
}

function setLanguage(lang) {
    store.lang = lang;
    return lang;
}
function toKebabCase(inputString) {
    return inputString.trim().replace(/\W+/g,'-').toLowerCase();
}
async function sync() {
    let languages;
    const dictionary = {};
    for (let sheet of store.doc.sheetsByIndex) {
        console.log(sheet.title)
        const rows = await sheet.getRows();
        console.log(sheet.headerValues);
        if (!languages) {
            languages = sheet.headerValues;
        } else {
            if (languages.sort().join('|') !== sheet.headerValues.sort().join('|')) {
                console.error(`There is an issue with the google document: Languages defined in "${sheet.title}" don't match languages on other sheets. Languages should be the same on all sheets. ${languages.toString()} -> ${sheet.headerValues.toString()}`)
            }
        }

        for(let row of rows){
            if(!row['en']) continue;
            for( let l of languages){
                if(!dictionary[l]) dictionary[l] = {};
                dictionary[l][row['en']] = row[l];
                dictionary[l][`[${toKebabCase(sheet.title)}]${row['en']}`] = row[l];
            }
        }

    } // or use doc.sheetsById[id] or doc.sheetsByTitle[title]
    translator = new I18n(dictionary);
}

function t(key, lang = store.lang) {
    if (!key) {
        console.error('Empty key was passed to $');
        return '';
    }
    translator.locale = lang;
    return translator.t(key);

}


export default {
    init,
    setLanguage,
    t
}
