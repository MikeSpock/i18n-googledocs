import {GoogleSpreadsheet} from "google-spreadsheet";

let doc;

async function addLocales(locales){
    if(!Array.isArray(locales)) locales = [locales];
    const uniquedLocales = doc.sheetsByIndex[0].headerValues;
    for(let sheet of doc.sheetsByIndex){
        const header = sheet.headerValues || [];
        const missingLocales = uniquedLocales.filter(h=>header.indexOf(h)===-1);
        console.log('adding to header row', header.concat(missingLocales))
        await sheet.setHeaderRow(header.concat(missingLocales));
    }
}
let syncMissingPending = false;
async function syncMissing(missing) {
    if(syncMissingPending) return;
    syncMissingPending = true;
    if (!Object.keys(missing).length) {
        console.log('[i18n] No missing items, skipping sync;')
        return;
    }
    console.log('[i18n] Syncing missing inputs...');
    const rowsToAdd = {};

    for (let sheetName in missing) {
        const items = missing[sheetName].items;
        let missingSheet = doc.sheetsByIndex.find(e => e.title === sheetName);
        if (!missingSheet) {
            console.log('[i18n] Sheet not found, creating.');
            missingSheet = await doc.addSheet({title: sheetName, headerValues: ['key', missing[sheetName].locale]});
        }

        if (!missingSheet.headerValues.find(h => h === missing[sheetName].locale)) {
            console.log('[i18n] Locale doesnt exist in document yet')
            console.log('loc', missingSheet.headerValues, missing[sheetName].locale)
            await addLocales(missing[sheetName].locale);
        }
        console.log('ADDING ROW', items.map(i => {
            return {'key': i, [missing[sheetName].locale]: ''}
        }))
        await missingSheet.addRows(items.map(i => {
            return {'key': i, [missing[sheetName].locale]: ''}
        }));
        delete missing[sheetName];
        console.log('[i18n] Done.');
    }
    syncMissingPending = false;
}
async function auth(doc, email, secret) {
    // Initialize Auth - see https://theoephraim.github.io/node-google-spreadsheet/#/getting-started/authentication
    await doc.useServiceAccountAuth({
        // env var values are copied from service account credentials generated by google
        // see "Authentication" section in docs for more info
        client_email: email,
        private_key: secret,
    });
}
async function unifyHeaders(){
    const locales = [];
    for(let sheet of doc.sheetsByIndex){
        try {
            await sheet.loadHeaderRow()
        } catch(e){}
        console.log(sheet.title, sheet.headerValues);
        locales.push(...(sheet.headerValues||[]))
    }
    await addLocales([...new Set(locales)]);
}
async function getDoc(docId, key, secret){
    doc = new GoogleSpreadsheet(docId);
    await auth(doc, key, secret);
    await doc.loadInfo(); // loads document properties and worksheets
    // await unifyHeaders();
    return doc;
}

export default {
    addLocales,
    syncMissing,
    getDoc
}
